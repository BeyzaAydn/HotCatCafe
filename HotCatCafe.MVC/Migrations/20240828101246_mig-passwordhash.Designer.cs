// <auto-generated />
using System;
using HotCatCafe.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.MVC.Migrations
{
    [DbContext(typeof(HotCatCafeContext))]
    [Migration("20240828101246_mig-passwordhash")]
    partial class migpasswordhash
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("acd3b1fc-3ab3-4e9a-94e6-9a9b97ac3d4e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cb6f9415-d58c-4ef1-936c-ec706aec2373",
                            Email = "Austen4@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "WWEEsodecg",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("07e4e70c-3009-40ce-9312-a3d190a0545a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "79cd94e6-31a9-4c33-80c1-b11b801c0305",
                            Email = "Mckenna81@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "woKQADmC2V",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("a140ed78-ae2c-4ee5-b8ff-a1c510dbb07e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "24d52c7f-1758-4dc5-8ce0-adfdd38a2798",
                            Email = "Dudley77@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "Adj0MFx7r9",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("6d0c9cf0-a19c-41f7-b227-c37e28a3f807"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9cf6dcd0-0399-4687-850a-53fce04188e0",
                            Email = "Agnes.Kub@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "2k9sSiIAg_",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("f554c4d9-1434-4cab-aad3-a3bd72d252c9"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2fc0fd48-4761-4ff4-8f23-726fbebf24cb",
                            Email = "Ernest93@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "OgKqwHRbFh",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("4d74cd6f-03cc-460e-b28a-624955eaa58a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "861de759-6823-400e-a0e4-0b15214ddaf1",
                            Email = "Edwina50@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "UZyXvbfYMI",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("1c16daca-70aa-4fb1-b2f5-e17b8ac206f6"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dd075482-ba3f-4383-aa2b-b17202c04b23",
                            Email = "Concepcion_Denesik90@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "jh8wJ7gtLL",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("453cb772-b631-452b-8200-e2d6bff6333e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "48bace85-bf51-4b16-8b30-72ea7bce21f8",
                            Email = "Emanuel66@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "Flu558xMWk",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("489b0416-30d4-4b4b-a6b0-0d5ab06df4e7"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2bc6f087-457a-4f31-a492-a435a49dfa3e",
                            Email = "Allison.Torp@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "WAyxr_6XSA",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("da8680f1-3364-475d-8f01-0efa15e6b773"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "642edce0-2d63-4c4f-b645-e07a8d649a63",
                            Email = "Caleigh.OConner63@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "AYNig7VUKt",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAdress")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = 0,
                            CategoryName = "Games",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 174, DateTimeKind.Local).AddTicks(9754),
                            CreatedIpAdress = 2,
                            Description = "Excepturi hic quo.",
                            MasterId = new Guid("08ccdd2a-0e5c-494c-8acd-7803e5570480"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Active = 0,
                            CategoryName = "Toys",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 175, DateTimeKind.Local).AddTicks(179),
                            CreatedIpAdress = 2,
                            Description = "Et sed eaque blanditiis dolor nihil sapiente ut.",
                            MasterId = new Guid("5a5eb96d-5e6e-4a92-a3f9-69d146d3b98d"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Active = 0,
                            CategoryName = "Movies",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 175, DateTimeKind.Local).AddTicks(221),
                            CreatedIpAdress = 2,
                            Description = "Sed placeat rerum qui quisquam corrupti vero.",
                            MasterId = new Guid("32b571f0-d7a6-4fb9-a429-67d9961c9aa9"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAdress")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6534),
                            CreatedIpAdress = 2,
                            Discount = 0.7428584935797920m,
                            MasterId = new Guid("9a73b9bb-6e2a-4a62-83d8-182102cf20de"),
                            ProductName = "Pizza",
                            Quantity = 87,
                            Status = 0,
                            UnitInStock = 3,
                            UnitPrice = 8132.06m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6755),
                            CreatedIpAdress = 2,
                            Discount = 0.5284373770356290m,
                            MasterId = new Guid("4759691b-8b5b-4fde-b2c5-db459bd0252c"),
                            ProductName = "Soap",
                            Quantity = 3,
                            Status = 0,
                            UnitInStock = 82,
                            UnitPrice = 2216.07m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6767),
                            CreatedIpAdress = 2,
                            Discount = 0.8355661509140860m,
                            MasterId = new Guid("02078228-7682-447d-a11c-a7eead81d5e2"),
                            ProductName = "Bike",
                            Quantity = 41,
                            Status = 0,
                            UnitInStock = 92,
                            UnitPrice = 1365.02m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6778),
                            CreatedIpAdress = 2,
                            Discount = 0.4062106986806960m,
                            MasterId = new Guid("7d1d29d6-acd2-495c-973e-1706dc21cdac"),
                            ProductName = "Soap",
                            Quantity = 15,
                            Status = 0,
                            UnitInStock = 8,
                            UnitPrice = 3167.26m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6786),
                            CreatedIpAdress = 2,
                            Discount = 0.8832448680425550m,
                            MasterId = new Guid("63c90761-dc39-4c28-a4a5-f98bc8eb0eee"),
                            ProductName = "Gloves",
                            Quantity = 80,
                            Status = 0,
                            UnitInStock = 41,
                            UnitPrice = 3764.26m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6807),
                            CreatedIpAdress = 2,
                            Discount = 0.6818914993126640m,
                            MasterId = new Guid("753f02fe-0e4c-4602-95d7-788d27406222"),
                            ProductName = "Soap",
                            Quantity = 26,
                            Status = 0,
                            UnitInStock = 93,
                            UnitPrice = 3416.02m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6815),
                            CreatedIpAdress = 2,
                            Discount = 0.30892092800820m,
                            MasterId = new Guid("6c597bf0-3d78-4222-830c-3c2afa5f6eca"),
                            ProductName = "Mouse",
                            Quantity = 29,
                            Status = 0,
                            UnitInStock = 1,
                            UnitPrice = 3875.24m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6824),
                            CreatedIpAdress = 2,
                            Discount = 0.6511120369933350m,
                            MasterId = new Guid("bbe4f0c4-95dc-4ea8-8096-e6998794f138"),
                            ProductName = "Soap",
                            Quantity = 69,
                            Status = 0,
                            UnitInStock = 15,
                            UnitPrice = 4393.95m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6832),
                            CreatedIpAdress = 2,
                            Discount = 0.06392525899147630m,
                            MasterId = new Guid("51ef7b5f-702a-4c34-945d-49f59c79630d"),
                            ProductName = "Keyboard",
                            Quantity = 52,
                            Status = 0,
                            UnitInStock = 23,
                            UnitPrice = 7807.55m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6865),
                            CreatedIpAdress = 2,
                            Discount = 0.7752977043894220m,
                            MasterId = new Guid("fabb18f3-734c-4cd4-bebd-5ab8f65850ee"),
                            ProductName = "Computer",
                            Quantity = 45,
                            Status = 0,
                            UnitInStock = 83,
                            UnitPrice = 2244.34m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6875),
                            CreatedIpAdress = 2,
                            Discount = 0.1777536542881420m,
                            MasterId = new Guid("d7a62398-dbd6-4971-a3bf-9761d0ce5b19"),
                            ProductName = "Table",
                            Quantity = 38,
                            Status = 0,
                            UnitInStock = 36,
                            UnitPrice = 894.66m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6884),
                            CreatedIpAdress = 2,
                            Discount = 0.3233526735236080m,
                            MasterId = new Guid("beec1b41-dbfb-4b0d-9110-38f7c4ad8d79"),
                            ProductName = "Car",
                            Quantity = 71,
                            Status = 0,
                            UnitInStock = 22,
                            UnitPrice = 6939.36m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6894),
                            CreatedIpAdress = 2,
                            Discount = 0.3656580993601370m,
                            MasterId = new Guid("cd2d607a-530d-41f9-83a6-0cc221c432d6"),
                            ProductName = "Pizza",
                            Quantity = 69,
                            Status = 0,
                            UnitInStock = 99,
                            UnitPrice = 4698.64m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6903),
                            CreatedIpAdress = 2,
                            Discount = 0.3309833165035520m,
                            MasterId = new Guid("0fc31475-5bab-4917-8c53-2cf468ee69d6"),
                            ProductName = "Shirt",
                            Quantity = 65,
                            Status = 0,
                            UnitInStock = 35,
                            UnitPrice = 6871.27m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6912),
                            CreatedIpAdress = 2,
                            Discount = 0.5561196854964920m,
                            MasterId = new Guid("372e7536-cdc0-4c9c-a76d-7d8d0c8d9fc4"),
                            ProductName = "Table",
                            Quantity = 34,
                            Status = 0,
                            UnitInStock = 79,
                            UnitPrice = 6304.67m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6919),
                            CreatedIpAdress = 2,
                            Discount = 0.4931011319373350m,
                            MasterId = new Guid("38e88f54-175d-4253-ac0a-12712aef5ccf"),
                            ProductName = "Shirt",
                            Quantity = 31,
                            Status = 0,
                            UnitInStock = 29,
                            UnitPrice = 4637.63m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6926),
                            CreatedIpAdress = 2,
                            Discount = 0.04649920591576860m,
                            MasterId = new Guid("03c64ab7-125b-4b27-9ec3-28bfdf1f12a3"),
                            ProductName = "Soap",
                            Quantity = 29,
                            Status = 0,
                            UnitInStock = 43,
                            UnitPrice = 3558.16m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6935),
                            CreatedIpAdress = 2,
                            Discount = 0.07972518540202410m,
                            MasterId = new Guid("9cd300a1-654f-47b4-a6ed-e3762c1b8695"),
                            ProductName = "Car",
                            Quantity = 55,
                            Status = 0,
                            UnitInStock = 40,
                            UnitPrice = 9472.34m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6943),
                            CreatedIpAdress = 2,
                            Discount = 0.8295564421731690m,
                            MasterId = new Guid("cb719208-ead7-408b-be60-b457d72e6380"),
                            ProductName = "Computer",
                            Quantity = 65,
                            Status = 0,
                            UnitInStock = 74,
                            UnitPrice = 8955.06m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6950),
                            CreatedIpAdress = 2,
                            Discount = 0.9819424286244260m,
                            MasterId = new Guid("e4019a97-c5e4-4d36-8d3b-069b24767c8a"),
                            ProductName = "Hat",
                            Quantity = 24,
                            Status = 0,
                            UnitInStock = 54,
                            UnitPrice = 1030.31m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 21,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6959),
                            CreatedIpAdress = 2,
                            Discount = 0.9207095256520m,
                            MasterId = new Guid("f3976db5-8418-4723-955d-580448b234fa"),
                            ProductName = "Chicken",
                            Quantity = 33,
                            Status = 0,
                            UnitInStock = 92,
                            UnitPrice = 2933.51m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 22,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6970),
                            CreatedIpAdress = 2,
                            Discount = 0.7070619344177310m,
                            MasterId = new Guid("a44421de-a2db-4e6b-92a5-bbf58d36349f"),
                            ProductName = "Computer",
                            Quantity = 29,
                            Status = 0,
                            UnitInStock = 62,
                            UnitPrice = 5653.77m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 23,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6977),
                            CreatedIpAdress = 2,
                            Discount = 0.09717030923107810m,
                            MasterId = new Guid("21d09790-c474-4ad8-bdeb-688ef70f1110"),
                            ProductName = "Gloves",
                            Quantity = 68,
                            Status = 0,
                            UnitInStock = 49,
                            UnitPrice = 9293.44m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 24,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6984),
                            CreatedIpAdress = 2,
                            Discount = 0.746600861372810m,
                            MasterId = new Guid("b92f168c-dfe3-4c8e-a620-df0c0b535082"),
                            ProductName = "Soap",
                            Quantity = 92,
                            Status = 0,
                            UnitInStock = 13,
                            UnitPrice = 3877.81m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 25,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6990),
                            CreatedIpAdress = 2,
                            Discount = 0.3776324095721960m,
                            MasterId = new Guid("c804d0bc-53de-48f6-af17-673cbe390a3e"),
                            ProductName = "Table",
                            Quantity = 53,
                            Status = 0,
                            UnitInStock = 33,
                            UnitPrice = 9860.76m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 26,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(6997),
                            CreatedIpAdress = 2,
                            Discount = 0.74849685079530m,
                            MasterId = new Guid("ad8a9776-07b3-46ac-83a0-d4cb287f0db5"),
                            ProductName = "Table",
                            Quantity = 64,
                            Status = 0,
                            UnitInStock = 52,
                            UnitPrice = 9432.10m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 27,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(7004),
                            CreatedIpAdress = 2,
                            Discount = 0.626169286102740m,
                            MasterId = new Guid("812d1345-823e-4505-9c4b-deb0d8ebc813"),
                            ProductName = "Bike",
                            Quantity = 69,
                            Status = 0,
                            UnitInStock = 59,
                            UnitPrice = 4067.08m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 28,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(7012),
                            CreatedIpAdress = 2,
                            Discount = 0.001632638157270220m,
                            MasterId = new Guid("1ff8f4c3-f680-4544-9773-107a40f980a8"),
                            ProductName = "Table",
                            Quantity = 7,
                            Status = 0,
                            UnitInStock = 75,
                            UnitPrice = 8053.55m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 29,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(7018),
                            CreatedIpAdress = 2,
                            Discount = 0.09722383809327980m,
                            MasterId = new Guid("16e2b768-0765-46cd-92f7-8d8da4ecf611"),
                            ProductName = "Towels",
                            Quantity = 58,
                            Status = 0,
                            UnitInStock = 72,
                            UnitPrice = 4370.29m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 30,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 8, 28, 13, 12, 46, 177, DateTimeKind.Local).AddTicks(7029),
                            CreatedIpAdress = 2,
                            Discount = 0.5755276434715780m,
                            MasterId = new Guid("97665078-6566-48cf-ba94-1b323d542a2f"),
                            ProductName = "Shirt",
                            Quantity = 87,
                            Status = 0,
                            UnitInStock = 50,
                            UnitPrice = 7357.16m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using HotCatCafe.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.DAL.Migrations
{
    [DbContext(typeof(HotCatCafeContext))]
    [Migration("20240707193038_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAdress")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Games",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 727, DateTimeKind.Local).AddTicks(6719),
                            CreatedIpAdress = 2,
                            Description = "Çünkü koyun non cezbelendi mi lakin illo açılmadan.",
                            MasterId = new Guid("79e23909-3383-4479-93cb-6371c6cd86bc"),
                            Status = 3,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Home",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 727, DateTimeKind.Local).AddTicks(7440),
                            CreatedIpAdress = 2,
                            Description = "Voluptatem dolorem enim.",
                            MasterId = new Guid("8768867d-8802-4cc1-8f44-a0a6077b8f85"),
                            Status = 3,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Beauty",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 727, DateTimeKind.Local).AddTicks(7489),
                            CreatedIpAdress = 2,
                            Description = "Corporis eos cezbelendi aut dolore.",
                            MasterId = new Guid("be91833f-2aac-467c-91ee-af45d7ce89b7"),
                            Status = 3,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAdress")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(8862),
                            CreatedIpAdress = 2,
                            Discount = 0.761277535515360m,
                            MasterId = new Guid("70e47920-e711-4136-9dea-10e2cc952416"),
                            ProductName = "Towels",
                            Quantity = 31,
                            Status = 3,
                            UnitInStock = 72,
                            UnitPrice = 9977.85m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9060),
                            CreatedIpAdress = 2,
                            Discount = 0.4978948927722070m,
                            MasterId = new Guid("85bd391b-c6f0-4f0a-9da7-afb7cb52b121"),
                            ProductName = "Bacon",
                            Quantity = 86,
                            Status = 3,
                            UnitInStock = 27,
                            UnitPrice = 1373.18m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9077),
                            CreatedIpAdress = 2,
                            Discount = 0.9962527571107240m,
                            MasterId = new Guid("6e2b67fe-6776-47a0-a70d-84d7d11bdfe7"),
                            ProductName = "Bike",
                            Quantity = 58,
                            Status = 3,
                            UnitInStock = 8,
                            UnitPrice = 9630.20m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9091),
                            CreatedIpAdress = 2,
                            Discount = 0.9077218625120760m,
                            MasterId = new Guid("b5cf982a-7a0e-43dc-8714-193d0d18d052"),
                            ProductName = "Ball",
                            Quantity = 5,
                            Status = 3,
                            UnitInStock = 29,
                            UnitPrice = 1502.23m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9103),
                            CreatedIpAdress = 2,
                            Discount = 0.484567512117530m,
                            MasterId = new Guid("d0de0f78-502b-4f09-9d19-b0910d448e9e"),
                            ProductName = "Chips",
                            Quantity = 2,
                            Status = 3,
                            UnitInStock = 20,
                            UnitPrice = 3919.64m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9115),
                            CreatedIpAdress = 2,
                            Discount = 0.2675924839660840m,
                            MasterId = new Guid("5d3914c3-9a24-4b7d-b89f-9016d1f628a3"),
                            ProductName = "Towels",
                            Quantity = 97,
                            Status = 3,
                            UnitInStock = 83,
                            UnitPrice = 6684.01m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9132),
                            CreatedIpAdress = 2,
                            Discount = 0.1976354797007040m,
                            MasterId = new Guid("b103d4e5-bb89-40f4-9624-dceffcabd3fa"),
                            ProductName = "Bike",
                            Quantity = 9,
                            Status = 3,
                            UnitInStock = 17,
                            UnitPrice = 5967.62m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9143),
                            CreatedIpAdress = 2,
                            Discount = 0.05189099280256320m,
                            MasterId = new Guid("a0f5477f-6e71-4c40-8e08-fbdb9c2045d9"),
                            ProductName = "Car",
                            Quantity = 9,
                            Status = 3,
                            UnitInStock = 96,
                            UnitPrice = 2638.04m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9160),
                            CreatedIpAdress = 2,
                            Discount = 0.4070515632708190m,
                            MasterId = new Guid("533cf36f-80b0-40e8-a3a4-1bde7e252f7b"),
                            ProductName = "Gloves",
                            Quantity = 51,
                            Status = 3,
                            UnitInStock = 12,
                            UnitPrice = 8820.71m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9172),
                            CreatedIpAdress = 2,
                            Discount = 0.6389190086833370m,
                            MasterId = new Guid("ad472d35-43b4-41d4-a73b-14e14c18f124"),
                            ProductName = "Fish",
                            Quantity = 62,
                            Status = 3,
                            UnitInStock = 70,
                            UnitPrice = 4266.45m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9184),
                            CreatedIpAdress = 2,
                            Discount = 0.6196502242571940m,
                            MasterId = new Guid("771de7c1-c7d4-4f44-b67b-f5ae712ac0bb"),
                            ProductName = "Soap",
                            Quantity = 82,
                            Status = 3,
                            UnitInStock = 12,
                            UnitPrice = 1252.83m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9194),
                            CreatedIpAdress = 2,
                            Discount = 0.5424958378620520m,
                            MasterId = new Guid("b781ac37-33d2-4c16-a60a-2f1f72e6e864"),
                            ProductName = "Keyboard",
                            Quantity = 74,
                            Status = 3,
                            UnitInStock = 58,
                            UnitPrice = 5048.80m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9204),
                            CreatedIpAdress = 2,
                            Discount = 0.2994286046158390m,
                            MasterId = new Guid("f7b512a2-b373-4481-943f-77ada1afcfd9"),
                            ProductName = "Cheese",
                            Quantity = 39,
                            Status = 3,
                            UnitInStock = 47,
                            UnitPrice = 8995.32m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9213),
                            CreatedIpAdress = 2,
                            Discount = 0.3470450487976720m,
                            MasterId = new Guid("270f8a8a-b1de-49c7-a1a1-8cc4aabc7017"),
                            ProductName = "Shoes",
                            Quantity = 53,
                            Status = 3,
                            UnitInStock = 38,
                            UnitPrice = 8783.42m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9223),
                            CreatedIpAdress = 2,
                            Discount = 0.9544920370906770m,
                            MasterId = new Guid("b6e035f7-7037-477c-8945-25ed79074852"),
                            ProductName = "Mouse",
                            Quantity = 52,
                            Status = 3,
                            UnitInStock = 37,
                            UnitPrice = 8984.61m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9233),
                            CreatedIpAdress = 2,
                            Discount = 0.4284736281072330m,
                            MasterId = new Guid("06c8dc5b-5706-42e6-a5fe-43f693958994"),
                            ProductName = "Tuna",
                            Quantity = 78,
                            Status = 3,
                            UnitInStock = 76,
                            UnitPrice = 4217.25m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9245),
                            CreatedIpAdress = 2,
                            Discount = 0.9697224038501020m,
                            MasterId = new Guid("39413481-350d-4765-86fa-33f6bf39286d"),
                            ProductName = "Sausages",
                            Quantity = 60,
                            Status = 3,
                            UnitInStock = 74,
                            UnitPrice = 4634.00m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9256),
                            CreatedIpAdress = 2,
                            Discount = 0.1050696000928780m,
                            MasterId = new Guid("82dad583-9959-45a5-bb8e-34ed5e3d6634"),
                            ProductName = "Chips",
                            Quantity = 68,
                            Status = 3,
                            UnitInStock = 36,
                            UnitPrice = 9817.97m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9266),
                            CreatedIpAdress = 2,
                            Discount = 0.5566760094939240m,
                            MasterId = new Guid("651b935e-85ba-49a5-a300-7764a17b9b3a"),
                            ProductName = "Bike",
                            Quantity = 41,
                            Status = 3,
                            UnitInStock = 77,
                            UnitPrice = 3844.07m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9276),
                            CreatedIpAdress = 2,
                            Discount = 0.9607937537119720m,
                            MasterId = new Guid("58687ddb-fd83-494e-a7a0-3fc900e3d287"),
                            ProductName = "Shirt",
                            Quantity = 39,
                            Status = 3,
                            UnitInStock = 69,
                            UnitPrice = 1378.08m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 21,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9286),
                            CreatedIpAdress = 2,
                            Discount = 0.09221527355158460m,
                            MasterId = new Guid("b0bd9b28-d9cb-45af-8103-aff005a05d12"),
                            ProductName = "Sausages",
                            Quantity = 77,
                            Status = 3,
                            UnitInStock = 54,
                            UnitPrice = 9954.53m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 22,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9296),
                            CreatedIpAdress = 2,
                            Discount = 0.08352211023044210m,
                            MasterId = new Guid("50b08647-b815-4fba-8f7a-5244b8779603"),
                            ProductName = "Bacon",
                            Quantity = 15,
                            Status = 3,
                            UnitInStock = 74,
                            UnitPrice = 4070.29m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 23,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9306),
                            CreatedIpAdress = 2,
                            Discount = 0.2328851423029660m,
                            MasterId = new Guid("1af043cb-2947-41cd-899f-42a32faa822c"),
                            ProductName = "Salad",
                            Quantity = 30,
                            Status = 3,
                            UnitInStock = 54,
                            UnitPrice = 6906.23m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 24,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9315),
                            CreatedIpAdress = 2,
                            Discount = 0.7151776115503530m,
                            MasterId = new Guid("f6e8f4b8-d76a-48c1-b687-f0b22d9e5c52"),
                            ProductName = "Soap",
                            Quantity = 13,
                            Status = 3,
                            UnitInStock = 65,
                            UnitPrice = 7548.24m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 25,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9327),
                            CreatedIpAdress = 2,
                            Discount = 0.03357691431627110m,
                            MasterId = new Guid("40ffd341-bb28-473b-b258-545149766c12"),
                            ProductName = "Computer",
                            Quantity = 42,
                            Status = 3,
                            UnitInStock = 81,
                            UnitPrice = 9028.42m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 26,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9338),
                            CreatedIpAdress = 2,
                            Discount = 0.5039848918457190m,
                            MasterId = new Guid("2ae489ac-a1c1-40e3-8450-c5a1132c7092"),
                            ProductName = "Chips",
                            Quantity = 66,
                            Status = 3,
                            UnitInStock = 98,
                            UnitPrice = 4162.63m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 27,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9348),
                            CreatedIpAdress = 2,
                            Discount = 0.8295251917689480m,
                            MasterId = new Guid("c5744f6f-cd0c-4c30-a423-a46de9f221f5"),
                            ProductName = "Chips",
                            Quantity = 100,
                            Status = 3,
                            UnitInStock = 14,
                            UnitPrice = 1579.33m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 28,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9357),
                            CreatedIpAdress = 2,
                            Discount = 0.1945578996092910m,
                            MasterId = new Guid("d6398c33-ab3a-469c-922f-823e76069603"),
                            ProductName = "Bacon",
                            Quantity = 89,
                            Status = 3,
                            UnitInStock = 83,
                            UnitPrice = 8108.22m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 29,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9372),
                            CreatedIpAdress = 2,
                            Discount = 0.6502771657939690m,
                            MasterId = new Guid("adafcb0c-6ec4-4d3a-8a0c-8d245bbed64f"),
                            ProductName = "Cheese",
                            Quantity = 36,
                            Status = 3,
                            UnitInStock = 9,
                            UnitPrice = 2018.96m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 30,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 7, 22, 30, 37, 728, DateTimeKind.Local).AddTicks(9382),
                            CreatedIpAdress = 2,
                            Discount = 0.2666404572327220m,
                            MasterId = new Guid("08ef3201-a02d-4256-973f-63cc0d1af093"),
                            ProductName = "Cheese",
                            Quantity = 89,
                            Status = 3,
                            UnitInStock = 10,
                            UnitPrice = 1597.23m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}

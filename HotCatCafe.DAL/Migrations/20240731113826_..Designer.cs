// <auto-generated />
using System;
using HotCatCafe.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.DAL.Migrations
{
    [DbContext(typeof(HotCatCafeContext))]
    [Migration("20240731113826_.")]
    partial class _
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d135686b-3282-4696-ae98-0da44b156953"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2d7696a5-3d82-4c3e-a92d-1b0cd4474271",
                            Email = "Alison.Langosh@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "JvPXf8b586",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("a77940a5-078e-4479-899f-9067a8e057c2"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bdb5a17c-6f45-4af2-bf1e-1ac956f7130e",
                            Email = "Chelsey_Pollich40@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "Vu1ZAGpK3e",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("2c8811df-b356-4dd2-b13e-e99370b0e3fc"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "75b839ca-0df7-4728-87d6-5221d82b56b3",
                            Email = "Orlo84@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "yS8tsFqygF",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("8d3bdf78-1d32-45c3-8633-465a5a2e2257"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1da694f8-a944-45bd-b124-ca9d7d0d6013",
                            Email = "Estefania_Purdy@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "hNXjwNp144",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("2bdb2048-b98d-4ae9-b8b6-fe68dd4bb7d2"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "451733db-ca70-4add-b5ea-f4b37777c911",
                            Email = "Leilani_Beahan@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "3cp0x0vvZi",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("f5cd46ae-6709-4243-83f8-22e247c19b67"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "225a0d2e-2883-467b-b10a-a120ba8b9ca7",
                            Email = "Jamarcus_Hessel48@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "UEN4duuwH9",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("10c4e1af-7dc3-4156-8f52-20cf94eb2d92"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5a33c942-ab65-442f-8b68-a6fb4173ff63",
                            Email = "Nikolas65@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "d0OTMXApmi",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("eda510b0-b515-4c80-a08c-4d567f57a899"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "23edce13-32eb-4879-b295-520bbf1bfb52",
                            Email = "Paxton10@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "cfe6HlfAH5",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("99b3c641-3582-435b-b1d6-6ebfd8cda2c2"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b15d0884-3d72-4862-9fb3-d10abeea7927",
                            Email = "Lukas75@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "hdI_jjYtdU",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("0ce00b17-2fad-4087-9aa9-bcb3026fe980"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e8c1dc6e-2a8d-4049-bd6a-656863650a5b",
                            Email = "Gracie41@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "u7B1FCkVCi",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAdress")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = 0,
                            CategoryName = "Books",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 269, DateTimeKind.Local).AddTicks(5921),
                            CreatedIpAdress = 2,
                            Description = "Reiciendis distinctio aut inventore nemo sint blanditiis aut omnis sed.",
                            MasterId = new Guid("af064e12-7504-48d0-944a-325c9bf542af"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Active = 0,
                            CategoryName = "Outdoors",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 269, DateTimeKind.Local).AddTicks(6619),
                            CreatedIpAdress = 2,
                            Description = "Maxime reiciendis non expedita harum consequatur qui laborum et.",
                            MasterId = new Guid("c71ad5e3-87fe-4059-86fc-0a0c2f200ce7"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Active = 0,
                            CategoryName = "Home",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 269, DateTimeKind.Local).AddTicks(6690),
                            CreatedIpAdress = 2,
                            Description = "Voluptatem dolores et id aliquam omnis.",
                            MasterId = new Guid("c5f80dbe-8e95-42dc-bf5c-d2acba27c308"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAdress")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(2896),
                            CreatedIpAdress = 2,
                            Discount = 0.9292258998063270m,
                            MasterId = new Guid("12a4566e-5301-4295-819d-12ebd6506097"),
                            ProductName = "Shoes",
                            Quantity = 89,
                            Status = 0,
                            UnitInStock = 76,
                            UnitPrice = 4487.33m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3234),
                            CreatedIpAdress = 2,
                            Discount = 0.4787462487709150m,
                            MasterId = new Guid("ae690c91-9946-435b-884f-fb077eedcb1f"),
                            ProductName = "Table",
                            Quantity = 30,
                            Status = 0,
                            UnitInStock = 16,
                            UnitPrice = 1652.68m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3257),
                            CreatedIpAdress = 2,
                            Discount = 0.8350758668966930m,
                            MasterId = new Guid("5265d8d0-706a-4381-88df-b5b8958fd54c"),
                            ProductName = "Hat",
                            Quantity = 55,
                            Status = 0,
                            UnitInStock = 76,
                            UnitPrice = 1080.45m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3274),
                            CreatedIpAdress = 2,
                            Discount = 0.9662810220637210m,
                            MasterId = new Guid("2bdb1539-e32d-402b-bff2-6a75e6d7b835"),
                            ProductName = "Keyboard",
                            Quantity = 82,
                            Status = 0,
                            UnitInStock = 22,
                            UnitPrice = 1969.37m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3289),
                            CreatedIpAdress = 2,
                            Discount = 0.5039760292747520m,
                            MasterId = new Guid("21b1c469-8575-4c42-b93c-6444ee917be3"),
                            ProductName = "Tuna",
                            Quantity = 57,
                            Status = 0,
                            UnitInStock = 54,
                            UnitPrice = 8094.97m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3305),
                            CreatedIpAdress = 2,
                            Discount = 0.3724716089894250m,
                            MasterId = new Guid("c9edfe04-5474-4485-9a6b-52d2e025913e"),
                            ProductName = "Hat",
                            Quantity = 66,
                            Status = 0,
                            UnitInStock = 19,
                            UnitPrice = 5597.47m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3324),
                            CreatedIpAdress = 2,
                            Discount = 0.9115984112162710m,
                            MasterId = new Guid("af77f03d-160d-4bd7-8563-1362a162cce6"),
                            ProductName = "Fish",
                            Quantity = 6,
                            Status = 0,
                            UnitInStock = 80,
                            UnitPrice = 7672.19m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3337),
                            CreatedIpAdress = 2,
                            Discount = 0.2896634409761150m,
                            MasterId = new Guid("df5336a0-c97a-4a60-83c9-1cf6228c0f74"),
                            ProductName = "Sausages",
                            Quantity = 26,
                            Status = 0,
                            UnitInStock = 51,
                            UnitPrice = 5599.44m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3352),
                            CreatedIpAdress = 2,
                            Discount = 0.01502010146768770m,
                            MasterId = new Guid("1941b276-c818-4b68-b9e0-4e40ad041fdf"),
                            ProductName = "Chips",
                            Quantity = 26,
                            Status = 0,
                            UnitInStock = 98,
                            UnitPrice = 3031.98m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3365),
                            CreatedIpAdress = 2,
                            Discount = 0.1064545036496470m,
                            MasterId = new Guid("368980e7-3728-4a39-99fb-391730af3ccd"),
                            ProductName = "Computer",
                            Quantity = 48,
                            Status = 0,
                            UnitInStock = 9,
                            UnitPrice = 5031.66m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3376),
                            CreatedIpAdress = 2,
                            Discount = 0.05309189291326290m,
                            MasterId = new Guid("bd52abdc-d7ed-4745-9d3e-9cc8b9cfb4af"),
                            ProductName = "Cheese",
                            Quantity = 91,
                            Status = 0,
                            UnitInStock = 23,
                            UnitPrice = 4308.99m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3388),
                            CreatedIpAdress = 2,
                            Discount = 0.1583787956460640m,
                            MasterId = new Guid("369635b1-a718-4def-adaf-53d94b0193e5"),
                            ProductName = "Sausages",
                            Quantity = 36,
                            Status = 0,
                            UnitInStock = 61,
                            UnitPrice = 7660.34m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3401),
                            CreatedIpAdress = 2,
                            Discount = 0.4230010405485680m,
                            MasterId = new Guid("8df3a23b-dd38-43ac-9aa5-2bbdf679385c"),
                            ProductName = "Table",
                            Quantity = 71,
                            Status = 0,
                            UnitInStock = 55,
                            UnitPrice = 1571.32m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3414),
                            CreatedIpAdress = 2,
                            Discount = 0.06563146835665370m,
                            MasterId = new Guid("54551773-d323-4154-98fa-7ec6499a1a03"),
                            ProductName = "Shoes",
                            Quantity = 43,
                            Status = 0,
                            UnitInStock = 87,
                            UnitPrice = 7945.29m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3430),
                            CreatedIpAdress = 2,
                            Discount = 0.4431074042343440m,
                            MasterId = new Guid("330ad033-70e4-40da-acaa-da8384fcaca7"),
                            ProductName = "Bacon",
                            Quantity = 82,
                            Status = 0,
                            UnitInStock = 86,
                            UnitPrice = 3972.14m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3451),
                            CreatedIpAdress = 2,
                            Discount = 0.3537614462340820m,
                            MasterId = new Guid("8186b97c-2dcb-46c9-a514-7bf9a77e3fb7"),
                            ProductName = "Shirt",
                            Quantity = 11,
                            Status = 0,
                            UnitInStock = 74,
                            UnitPrice = 3854.96m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3466),
                            CreatedIpAdress = 2,
                            Discount = 0.2389815069000230m,
                            MasterId = new Guid("5ba7e33a-e358-4ee3-aafd-5b250aa6367f"),
                            ProductName = "Towels",
                            Quantity = 66,
                            Status = 0,
                            UnitInStock = 74,
                            UnitPrice = 9334.78m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3479),
                            CreatedIpAdress = 2,
                            Discount = 0.231396368608760m,
                            MasterId = new Guid("fd573121-4afc-43a6-b502-7f3b6014ea0a"),
                            ProductName = "Car",
                            Quantity = 53,
                            Status = 0,
                            UnitInStock = 73,
                            UnitPrice = 1976.86m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3492),
                            CreatedIpAdress = 2,
                            Discount = 0.8245946483296890m,
                            MasterId = new Guid("e556f0f3-187c-4c24-8841-fcce209edd2c"),
                            ProductName = "Bacon",
                            Quantity = 94,
                            Status = 0,
                            UnitInStock = 21,
                            UnitPrice = 3160.53m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3505),
                            CreatedIpAdress = 2,
                            Discount = 0.455553556569320m,
                            MasterId = new Guid("54a966a7-5339-4ea3-a661-bcde8faa7bf0"),
                            ProductName = "Hat",
                            Quantity = 48,
                            Status = 0,
                            UnitInStock = 7,
                            UnitPrice = 9745.40m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 21,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3518),
                            CreatedIpAdress = 2,
                            Discount = 0.594245274275330m,
                            MasterId = new Guid("2c988b22-d009-4d55-9db5-3ff73a467ba5"),
                            ProductName = "Tuna",
                            Quantity = 87,
                            Status = 0,
                            UnitInStock = 12,
                            UnitPrice = 6949.87m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 22,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3531),
                            CreatedIpAdress = 2,
                            Discount = 0.9594946179553860m,
                            MasterId = new Guid("562685d4-b154-4cf4-8ee0-4c4db2a14579"),
                            ProductName = "Shoes",
                            Quantity = 28,
                            Status = 0,
                            UnitInStock = 22,
                            UnitPrice = 4392.19m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 23,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3546),
                            CreatedIpAdress = 2,
                            Discount = 0.1696206288619150m,
                            MasterId = new Guid("d03c606d-b008-4567-b1f9-7612638b3374"),
                            ProductName = "Car",
                            Quantity = 4,
                            Status = 0,
                            UnitInStock = 12,
                            UnitPrice = 1381.49m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 24,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3558),
                            CreatedIpAdress = 2,
                            Discount = 0.7349234914187830m,
                            MasterId = new Guid("e3ab3869-1bba-413d-9830-881152c473a5"),
                            ProductName = "Pizza",
                            Quantity = 14,
                            Status = 0,
                            UnitInStock = 11,
                            UnitPrice = 4321.34m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 25,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3571),
                            CreatedIpAdress = 2,
                            Discount = 0.9882277051742750m,
                            MasterId = new Guid("a4c41865-dad9-41af-80d0-86deee77a8ad"),
                            ProductName = "Pizza",
                            Quantity = 66,
                            Status = 0,
                            UnitInStock = 67,
                            UnitPrice = 3895.33m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 26,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3582),
                            CreatedIpAdress = 2,
                            Discount = 0.6532282257665820m,
                            MasterId = new Guid("990a2132-b1dd-4fae-921f-3065463fbdc7"),
                            ProductName = "Computer",
                            Quantity = 28,
                            Status = 0,
                            UnitInStock = 22,
                            UnitPrice = 8235.65m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 27,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3594),
                            CreatedIpAdress = 2,
                            Discount = 0.3975878956584060m,
                            MasterId = new Guid("5dcbc92d-73cd-4155-a2b3-18a209b17687"),
                            ProductName = "Mouse",
                            Quantity = 19,
                            Status = 0,
                            UnitInStock = 32,
                            UnitPrice = 4334.61m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 28,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3606),
                            CreatedIpAdress = 2,
                            Discount = 0.966355493550820m,
                            MasterId = new Guid("fd869dfc-b089-472c-b5b5-a200e16be9ce"),
                            ProductName = "Towels",
                            Quantity = 21,
                            Status = 0,
                            UnitInStock = 77,
                            UnitPrice = 7314.14m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 29,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3618),
                            CreatedIpAdress = 2,
                            Discount = 0.008285285696594480m,
                            MasterId = new Guid("a633f01e-1358-43ad-8ffc-52e86af00dc3"),
                            ProductName = "Chips",
                            Quantity = 30,
                            Status = 0,
                            UnitInStock = 29,
                            UnitPrice = 2924.05m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 30,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 31, 14, 38, 25, 271, DateTimeKind.Local).AddTicks(3632),
                            CreatedIpAdress = 2,
                            Discount = 0.8532478726148760m,
                            MasterId = new Guid("4156e7fc-334f-44d1-be40-506dc150c43d"),
                            ProductName = "Bike",
                            Quantity = 9,
                            Status = 0,
                            UnitInStock = 100,
                            UnitPrice = 9810.47m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}

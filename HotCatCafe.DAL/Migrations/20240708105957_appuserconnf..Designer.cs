// <auto-generated />
using System;
using HotCatCafe.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.DAL.Migrations
{
    [DbContext(typeof(HotCatCafeContext))]
    [Migration("20240708105957_appuserconnf.")]
    partial class appuserconnf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a956770e-875e-4d9f-88b7-dc9f36751e30"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ef11d345-d9f2-447d-985d-8a38a745e492",
                            Email = "Melyna.Fay@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "zEhmFdU_oK",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("153a1f0d-fea5-45a6-9fbf-aa9beb7830e1"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9c8397bf-9060-4021-8cfb-fb9438db7ead",
                            Email = "Johnny.Crooks41@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "OUejljMjHD",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("4c567826-8ead-418e-addf-ca5f1c8565c3"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e66a3dd3-c074-4650-b610-b6f61cd0431f",
                            Email = "Shad7@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "jgDjkJIHV5",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("25e59c0b-ee6c-4d3e-98a8-e6ac35d03f33"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "22a3190e-f990-4e20-b5e4-2217fbd098d5",
                            Email = "Caesar_Huel@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "qwNVT7uq0t",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("5d2fbc6f-db51-4197-97d1-95eb78fb5ec7"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "313118a0-4430-4c21-98a1-fe36f64a2aee",
                            Email = "Damian.Keebler@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "KEkAnGLkAP",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("d8ae121b-be93-4509-9836-5b89a920a4c4"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3db54e6c-292f-4288-bed9-9b3e2823792c",
                            Email = "Rosamond.Hintz10@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "VIZtRS4U4W",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("ce7fa382-b05c-440a-9233-e2047e959aaa"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02bae07e-ccbf-46ec-954d-f5ec31bfaa7e",
                            Email = "Eulalia_McGlynn52@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "5MBwwqkSXW",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("8025cb11-b248-444f-8abe-b44b01ac34ea"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2bf7d77-ccb5-4c09-b34a-72997142bc5a",
                            Email = "Demetrius_Rodriguez30@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "3y1peN7ucc",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("9ae9fb8b-7fc2-4843-8437-80166ab0b111"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0df75498-d291-48fb-b2a6-b09f350fc31d",
                            Email = "Eileen33@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "xLGUUcazR4",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        },
                        new
                        {
                            Id = new Guid("5a985b13-697d-443e-af1f-3b76e6de4898"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "be2ae079-848e-4c5d-8af0-f9335ec96660",
                            Email = "Nelda7@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "GZYAU5uoKl",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bogus.DataSets.Name"
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAdress")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = 0,
                            CategoryName = "Shoes",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 746, DateTimeKind.Local).AddTicks(1016),
                            CreatedIpAdress = 2,
                            Description = "Veniam quia in.",
                            MasterId = new Guid("19077faa-e641-4816-bc7e-11d2d74a84c7"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Active = 0,
                            CategoryName = "Automotive",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 746, DateTimeKind.Local).AddTicks(1466),
                            CreatedIpAdress = 2,
                            Description = "Qui quod aut quo placeat vero cum qui nulla.",
                            MasterId = new Guid("53494a1f-3682-4401-b7d3-2798a2e53f67"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Active = 0,
                            CategoryName = "Electronics",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 746, DateTimeKind.Local).AddTicks(1521),
                            CreatedIpAdress = 2,
                            Description = "Dolorem deleniti deleniti odio non molestiae aliquid rerum omnis.",
                            MasterId = new Guid("713d3cc8-426c-4343-8dba-04fa55d123a8"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAdress")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(4903),
                            CreatedIpAdress = 2,
                            Discount = 0.6428872054696020m,
                            MasterId = new Guid("c7ec69c9-e35a-4a64-bb2b-1494a94af785"),
                            ProductName = "Keyboard",
                            Quantity = 41,
                            Status = 0,
                            UnitInStock = 98,
                            UnitPrice = 1847.94m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5144),
                            CreatedIpAdress = 2,
                            Discount = 0.1960126357114390m,
                            MasterId = new Guid("3c1d073a-23d5-4da5-97b0-986b6aa554aa"),
                            ProductName = "Car",
                            Quantity = 54,
                            Status = 0,
                            UnitInStock = 20,
                            UnitPrice = 195.80m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5163),
                            CreatedIpAdress = 2,
                            Discount = 0.4147323494330750m,
                            MasterId = new Guid("375360d2-0c59-4a90-adcb-b2d6ae8a2087"),
                            ProductName = "Soap",
                            Quantity = 24,
                            Status = 0,
                            UnitInStock = 15,
                            UnitPrice = 7861.47m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5192),
                            CreatedIpAdress = 2,
                            Discount = 0.7910172536097130m,
                            MasterId = new Guid("878a2c2e-551c-4db6-9e0f-7ec764cd25e6"),
                            ProductName = "Bike",
                            Quantity = 58,
                            Status = 0,
                            UnitInStock = 64,
                            UnitPrice = 1394.68m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5204),
                            CreatedIpAdress = 2,
                            Discount = 0.6120277361679250m,
                            MasterId = new Guid("61704e6b-0a61-4a30-844a-027130e15402"),
                            ProductName = "Car",
                            Quantity = 15,
                            Status = 0,
                            UnitInStock = 20,
                            UnitPrice = 7109.95m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5217),
                            CreatedIpAdress = 2,
                            Discount = 0.07037060762093120m,
                            MasterId = new Guid("0090caf8-de7b-42a0-953f-dccd73de2987"),
                            ProductName = "Ball",
                            Quantity = 95,
                            Status = 0,
                            UnitInStock = 80,
                            UnitPrice = 9992.14m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5229),
                            CreatedIpAdress = 2,
                            Discount = 0.08020640819259050m,
                            MasterId = new Guid("8aa20085-5875-49d4-89a3-a1ae2273cecc"),
                            ProductName = "Soap",
                            Quantity = 18,
                            Status = 0,
                            UnitInStock = 41,
                            UnitPrice = 9014.96m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5239),
                            CreatedIpAdress = 2,
                            Discount = 0.9632907976361540m,
                            MasterId = new Guid("906813dd-294a-480d-9ba5-de7158da2838"),
                            ProductName = "Pizza",
                            Quantity = 35,
                            Status = 0,
                            UnitInStock = 58,
                            UnitPrice = 3968.50m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5251),
                            CreatedIpAdress = 2,
                            Discount = 0.4336924012880430m,
                            MasterId = new Guid("28512f25-d286-4e90-b1fc-8dd0bb1308c5"),
                            ProductName = "Cheese",
                            Quantity = 41,
                            Status = 0,
                            UnitInStock = 86,
                            UnitPrice = 2592.27m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            Active = 0,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5268),
                            CreatedIpAdress = 2,
                            Discount = 0.09021138482582210m,
                            MasterId = new Guid("0b3599b3-2860-4e35-bb4b-3faf620ed447"),
                            ProductName = "Fish",
                            Quantity = 28,
                            Status = 0,
                            UnitInStock = 79,
                            UnitPrice = 959.48m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5280),
                            CreatedIpAdress = 2,
                            Discount = 0.7917584575224990m,
                            MasterId = new Guid("c1494b03-4e16-4a74-854f-7bb363da89d8"),
                            ProductName = "Shoes",
                            Quantity = 99,
                            Status = 0,
                            UnitInStock = 8,
                            UnitPrice = 2312.55m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5294),
                            CreatedIpAdress = 2,
                            Discount = 0.2602748103011730m,
                            MasterId = new Guid("7b27c43c-157d-45db-9499-a2c57c800daf"),
                            ProductName = "Chips",
                            Quantity = 83,
                            Status = 0,
                            UnitInStock = 48,
                            UnitPrice = 3689.97m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5305),
                            CreatedIpAdress = 2,
                            Discount = 0.7639876529389640m,
                            MasterId = new Guid("35fcbc9c-f8ea-4552-a68f-32dd41686fd5"),
                            ProductName = "Table",
                            Quantity = 89,
                            Status = 0,
                            UnitInStock = 94,
                            UnitPrice = 8085.61m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5315),
                            CreatedIpAdress = 2,
                            Discount = 0.649815974449780m,
                            MasterId = new Guid("66f21437-61d7-45be-85aa-7987e336cb79"),
                            ProductName = "Cheese",
                            Quantity = 18,
                            Status = 0,
                            UnitInStock = 90,
                            UnitPrice = 9092.31m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5325),
                            CreatedIpAdress = 2,
                            Discount = 0.6589937521007460m,
                            MasterId = new Guid("c6d4d3ec-0060-49ac-b029-d3f667c41039"),
                            ProductName = "Ball",
                            Quantity = 58,
                            Status = 0,
                            UnitInStock = 40,
                            UnitPrice = 8175.78m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5336),
                            CreatedIpAdress = 2,
                            Discount = 0.3761766601655870m,
                            MasterId = new Guid("f71e4d57-a32b-49c7-8892-e3b681bcce5b"),
                            ProductName = "Computer",
                            Quantity = 70,
                            Status = 0,
                            UnitInStock = 32,
                            UnitPrice = 5546.27m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5347),
                            CreatedIpAdress = 2,
                            Discount = 0.4324889877596690m,
                            MasterId = new Guid("0807a2ea-2b40-4073-8a6c-9b537eb861d2"),
                            ProductName = "Chair",
                            Quantity = 94,
                            Status = 0,
                            UnitInStock = 5,
                            UnitPrice = 3884.36m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5358),
                            CreatedIpAdress = 2,
                            Discount = 0.8643031204943920m,
                            MasterId = new Guid("1189c8c6-80e5-4525-a980-d8b8b5855ec3"),
                            ProductName = "Chair",
                            Quantity = 36,
                            Status = 0,
                            UnitInStock = 47,
                            UnitPrice = 9446.87m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5368),
                            CreatedIpAdress = 2,
                            Discount = 0.7800938944050770m,
                            MasterId = new Guid("d29409a7-397d-4e9e-9a0c-9c51166edd4b"),
                            ProductName = "Pizza",
                            Quantity = 79,
                            Status = 0,
                            UnitInStock = 81,
                            UnitPrice = 3061.15m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            Active = 0,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5380),
                            CreatedIpAdress = 2,
                            Discount = 0.3852028605487360m,
                            MasterId = new Guid("33f2d0d0-fec1-4493-8459-606e83285f88"),
                            ProductName = "Pizza",
                            Quantity = 93,
                            Status = 0,
                            UnitInStock = 87,
                            UnitPrice = 6314.31m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 21,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5390),
                            CreatedIpAdress = 2,
                            Discount = 0.3119380775863960m,
                            MasterId = new Guid("d12592df-87f2-4306-bca4-039c44c168d9"),
                            ProductName = "Gloves",
                            Quantity = 9,
                            Status = 0,
                            UnitInStock = 26,
                            UnitPrice = 2068.60m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 22,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5400),
                            CreatedIpAdress = 2,
                            Discount = 0.5075075304211730m,
                            MasterId = new Guid("51ed85b7-616b-447a-9f57-2fd21e1dd5ae"),
                            ProductName = "Chips",
                            Quantity = 18,
                            Status = 0,
                            UnitInStock = 78,
                            UnitPrice = 2063.23m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 23,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5410),
                            CreatedIpAdress = 2,
                            Discount = 0.6565928263619290m,
                            MasterId = new Guid("cd431927-2915-4e8c-87fb-40f5d75da889"),
                            ProductName = "Bacon",
                            Quantity = 32,
                            Status = 0,
                            UnitInStock = 35,
                            UnitPrice = 3998.95m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 24,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5419),
                            CreatedIpAdress = 2,
                            Discount = 0.1004464274054460m,
                            MasterId = new Guid("097c1d6b-5b36-4d99-9a10-40346906cdf5"),
                            ProductName = "Keyboard",
                            Quantity = 91,
                            Status = 0,
                            UnitInStock = 94,
                            UnitPrice = 4316.00m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 25,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5430),
                            CreatedIpAdress = 2,
                            Discount = 0.4964264650743080m,
                            MasterId = new Guid("348bbc7c-b2ab-470a-a830-074330a3e64c"),
                            ProductName = "Salad",
                            Quantity = 98,
                            Status = 0,
                            UnitInStock = 96,
                            UnitPrice = 3177.42m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 26,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5440),
                            CreatedIpAdress = 2,
                            Discount = 0.866661943828180m,
                            MasterId = new Guid("ecdd431e-d45c-4467-8f6f-dca1d3c7be40"),
                            ProductName = "Hat",
                            Quantity = 14,
                            Status = 0,
                            UnitInStock = 61,
                            UnitPrice = 5053.87m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 27,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5450),
                            CreatedIpAdress = 2,
                            Discount = 0.9671123418972280m,
                            MasterId = new Guid("12859491-33ab-449f-9eb1-3c56f0c80cf4"),
                            ProductName = "Tuna",
                            Quantity = 23,
                            Status = 0,
                            UnitInStock = 90,
                            UnitPrice = 1334.79m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 28,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5464),
                            CreatedIpAdress = 2,
                            Discount = 0.8022435546147240m,
                            MasterId = new Guid("776c2127-7396-44ae-a311-3ed6b1b7c2bb"),
                            ProductName = "Ball",
                            Quantity = 20,
                            Status = 0,
                            UnitInStock = 3,
                            UnitPrice = 3022.56m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 29,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5473),
                            CreatedIpAdress = 2,
                            Discount = 0.006377194102151430m,
                            MasterId = new Guid("07a28769-8dd9-4499-8b2b-af7804a44c5d"),
                            ProductName = "Mouse",
                            Quantity = 57,
                            Status = 0,
                            UnitInStock = 60,
                            UnitPrice = 6692.96m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 30,
                            Active = 0,
                            CategoryId = 3,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 7, 8, 13, 59, 56, 747, DateTimeKind.Local).AddTicks(5483),
                            CreatedIpAdress = 2,
                            Discount = 0.918445548191880m,
                            MasterId = new Guid("df53e74c-8bfb-4fce-9021-e40a25b68c0b"),
                            ProductName = "Salad",
                            Quantity = 19,
                            Status = 0,
                            UnitInStock = 59,
                            UnitPrice = 7115.96m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
